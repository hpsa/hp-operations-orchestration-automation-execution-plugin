<!--

- (c) Copyright 2013 Hewlett-Packard Development Company, L.P. 
- Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-->
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <!--
    This Jelly script is used to produce the global configuration option.

    Jenkins uses a set of tag libraries to provide uniformity in forms.
    To determine where this tag is defined, first check the namespace URI,
    and then look under $JENKINS/views/. For example, <f:section> is defined
    in $JENKINS/views/lib/form/section.jelly.

    It's also often useful to just check other similar scripts to see what
    tags they use. Views are always organized according to its owner class,
    so it should be straightforward to find them.
  -->
<![CDATA[
      <script language="javascript">



    /*
    from: http://stackoverflow.com/questions/868407/hide-an-elements-next-sibling-with-javascript
       Credit to John Resig for this function
       taken from Pro JavaScript techniques
    */
    function next(elem) {
        do {
        	elem = elem.nextSibling;
        } while (elem && elem.nodeType != 1);
        return elem;
    }

  function validateUrl(str) {

          //return URI_FORMAT_REGEX.test(str);

        //var pattern = new RegExp("/^(ht|f)tps?:\/\/[a-z0-9-\.]+\.[a-z]{2,4}\/?([^\s<>\#%"\,\{\}\\|\\\^\[\]`]+)?$/");
        var pattern = new RegExp("^(ht|f)tp(s?)\:\/\/[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*(:(0-9)*)*(\/?)([a-zA-Z0-9\-‌​\.\?\,\'\/\\\+&amp;%\$#_]*)?$");

        return str.match(pattern);
  }

  function validateUserInput(element) {

    var errorHolder = next(element);

    while (errorHolder.hasChildNodes()) {
        errorHolder.removeChild(errorHolder.lastChild);
    }

    if (!validateUrl(element.value)) {
        var errorMessage = document.createTextNode('warning: ' + element.value + ' is not a valid URL.');
        errorHolder.appendChild(errorMessage);
    }
  }

    </script>
    ]]>

  <f:section title="HP Operations Orchestration">

        <j:choose>
            <j:when test="${descriptor.isDevModeEnabled() || descriptor.isIgnoreSsl()}">
                <f:entry title="Ignore SSL" field="ignoreSsl"
                  description="if the server is https, work as if http (non secure, vulnerable to man in the middle attack - but doesn't require setting up the server certificate in jenkins)">
                  <f:checkbox value="${descriptor.isIgnoreSsl()}"/>
                </f:entry>
            </j:when>
            <j:otherwise>
                <input type="hidden" name="ignoreSsl" value="${descriptor.isIgnoreSsl()}"/>
            </j:otherwise>
        </j:choose>

        <!-- <f:entry title="Timeout (in seconds)" field="stepExecutionTimeout"
          description="the amount of time jenkins should wait before giving up on a non-responsive OO server.">
          <f:textbox value="${descriptor.getTimeout()}" />
        </f:entry> -->

        <f:entry title="Truststore File (absolute path of JKS truststore)" field="keystorePath">
            <f:textbox id="oo.keystore.path" checkUrl="'descriptorByName/OOBuildStep/checkKeystorePath?value='+escape(this.value)"/>
        </f:entry>

        <f:entry title="Truststore Password" field="keystorePassword">
            <f:password checkUrl="'descriptorByName/OOBuildStep/checkKeystorePassword?value='+escape(this.value)+'&amp;path='+escape(document.getElementById('oo.keystore.path').value)"/>
        </f:entry>
      <f:advanced title="Show Servers" align="left">
      <f:entry title="Configure HP Operations Orchestration Server" field="configureServer">
          <f:repeatable var="ooServer" name="ooServers" items="${instance.getOoServers(false).values()}" minimum="${instance.getOoServers(false).size()}">
            <table width="100%">
                <f:entry title="Unique Label" field="uniqueLabel"
                  description="Unique name for the OO instance (displayed to the user and used as id)">
                  <f:textbox value="${ooServer.getUniqueLabel()}"/>
                </f:entry>
                <f:entry title="Host" field="hostUrl"
                  description="URL of the OO server.">
                  <f:textbox value="${ooServer.getUrl()}" onchange="validateUserInput(this);" onkeyup="validateUserInput(this);"/>
                  <!-- container for invalid url error -->
                  <div style="color:red;"/>
                </f:entry>
                <f:entry title="Username" field="username"
                  description="Username to login with.">
                  <f:textbox value="${ooServer.getUsername()}"/>
                </f:entry>
                <f:entry title="Password" field="password"
                  description="Password for the aforementioned username.">
                  <f:password value="${ooServer.getPassword()}"/>
                </f:entry>
                <f:entry title="">
                    <div align="right">
                      <f:repeatableDeleteButton value="Delete"/>
                    </div>
                </f:entry>
            </table>
          </f:repeatable>
      </f:entry>
        </f:advanced>
        <!-- workaround for js not having onload event for html elements. bulk validate all hostUrls during load. -->
        <![CDATA[
      <script language="JavaScript" type="text/javascript">

        var inputs = document.getElementsByTagName("input");
        var i;
        for (i = 0 ; i < inputs.length ; i++) {
            var userInput = inputs[i];
            if (userInput.name && (userInput.name.indexOf("hostUrl")!= -1)) {
                validateUserInput(userInput);
            }
        }

      </script>
      ]]>

  </f:section>
</j:jelly>
